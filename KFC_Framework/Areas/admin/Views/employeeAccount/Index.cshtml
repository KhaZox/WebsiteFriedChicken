@model KFC_Framework.Models.NhanVien

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/admin/Views/Shared/_LayoutAdmin.cshtml";
}

@*@using (Html.BeginForm("updateAccountEmployee", "employeeAccount", new { id = Model.MaNV }, FormMethod.Post))*@
<form  class="text-start form" id="inforEmployee">
    @Html.AntiForgeryToken()

    <div class="form-horizontal container">
        <h4>Thông tin Nhân Viên</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MaNV)
        <h1 id="NotiUpdate" style="display:none;color:red"></h1>

        <div class="row">
            <div class="col col-6">
                <div class="Body_form mt-4">
                    <input class="form_input" id="manv" name="manv" rules="required" type="text" value="@Model.MaNV" disabled>
                    <label for="manv" class="form-label">Mã Nhân Viên</label>
                    @Html.ValidationMessageFor(model => model.MaNV, "", new { @class = "text-danger form-message" })
                </div>

                <div class="Body_form mt-4">
                    <input class="form_input" id="hoten" name="hoten" rules="required" type="text" value="@Model.HoTen">
                    <label for="hoten" class="form-label">Họ Tên</label>
                    @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger form-message" })
                </div>

                <div class="Body_form mt-4">
                    @if (Model.NgaySinh != null)
                    {
                        <input class="form_input" id="ngaysinh" name="ngaysinh" type="datetime" value="@Model.NgaySinh.ToString()">
                    }
                    else
                    {
                        <input class="form_input" id="ngaysinh" name="ngaysinh" type="date" value="">
                    }
                    <label for="ngaysinh" class="form-label">Ngày Sinh</label>
                    @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger form-message" })
                </div>

                <div class="Body_form mt-4">
                    <select class="form-select" aria-label="Default select example" style="border: none; padding-left: 5px" name="gender">
                        <option value="1" @(Model.GioiTinh == "Nam" ? "selected" : "")>Nam</option>
                        <option value="0" @(Model.GioiTinh == "Nữ" ? "selected" : "")>Nữ</option>
                    </select>
                </div>
            </div>

            <div class="col col-6">
                <div class="Body_form mt-4">
                    <input class="form_input" id="diachi" name="diachi" rules="required" type="text" value="@Model.DiaChi">
                    <label for="diachi" class="form-label">Địa Chỉ</label>
                    @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger form-message" })
                </div>

                <div class="Body_form mt-4">
                    <input class="form_input" id="email" name="email" rules="required" type="email" value="@Model.Email">
                    <label for="email" class="form-label">Email</label>
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger form-message" })
                </div>

                <div class="Body_form mt-4">
                    <input class="form_input" id="sdt" name="sdt" rules="required" type="tel" value="@Model.SoDT">
                    <label for="sdt" class="form-label">Số Điện Thoại</label>
                    @Html.ValidationMessageFor(model => model.SoDT, "", new { @class = "text-danger form-message" })
                </div>

                <div class="Body_form mt-4">
                    <input class="form_input" id="chucvu" name="chucvu" rules="required" type="tel" value="@Model.ChucVu" disabled>
                    <label for="chucvu" class="form-label">Chức Vụ</label>
                    @Html.ValidationMessageFor(model => model.ChucVu, "", new { @class = "text-danger form-message" })
                </div>

            </div>
        </div>
        <div class="form-group row">
            <div class="col-12">
                <button type="submit" class="btn btn-custom btn-danger">Cập nhật thông tin</button>
            </div>
        </div>
    </div>

</form>

@section css{
    <link rel="stylesheet" href="~/Content/Site.css" />
    <link rel="stylesheet" href="~/Content/Account.css" />
}
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/Account.js"></script>
<script>
    $(document).ready(function () {
        // Function to handle form submission
        $('#inforEmployee').submit(function (event) {
            // Prevent default form submission
            event.preventDefault();

            // Serialize form data
            var formData = $(this).serialize();

            // Parse form data into individual key-value pairs
            var formDataArray = formData.split('&');
            var nhanvien = {};
            formDataArray.forEach(function (pair) {
                var keyValue = pair.split('=');
                var key = decodeURIComponent(keyValue[0]);
                var value = decodeURIComponent(keyValue[1]);
                // Assign values to the KhachHang object based on field names
                switch (key) {
                    case 'manv':
                        nhanvien.MaNV = value;
                        break;
                    case 'hoten':
                        nhanvien.HoTen = value;
                        break;
                    case 'ngaysinh':
                        nhanvien.NgaySinh = value;
                        break;
                    case 'gioitinh':
                        nhanvien.GioiTinh = value;
                        break;
                    case 'diachi':
                        nhanvien.DiaChi = value;
                        break;
                    case 'email':
                        nhanvien.Email = value;
                        break;
                    case 'sdt':
                        nhanvien.SoDT = value;
                        break;
                    case 'chucvu':
                        nhanvien.ChucVu = value;
                        break;
                    default:
                        break;
                }
            });

            // AJAX call to update profile
            $.ajax({
                type: 'POST',
                url: '@Url.Action("updateAccountEmployee", "employeeAccount")', // Update with your actual API endpoint
                data: nhanvien, // Send parsed data
                success: function (response) {
                    // Handle success response
                    console.log('Profile updated successfully:', response);
                    // You can perform further actions like showing a success message or redirecting the user
                    $('#NotiUpdate').text(response.message).c;
                    $('#NotiUpdate').css('display', 'block');
                    setTimeout(function () {
                        $('#NotiUpdate').css('display', 'none');
                    }, 3000);
                },
                error: function (xhr, status, error) {
                    // Handle error response
                    console.error('Error updating profile:', error);
                    // You can display an error message to the user or handle the error in another way
                }
            });
        });
    });
</script>
